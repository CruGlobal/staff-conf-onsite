@finances = FamilyFinances::CreateTable.call(family: family)

columns do
  column do
    h2 'Attendees'

    @finances.attendee_reports.each do |report|
      attendee = report.attendee

      panel link_to(attendee.full_name, attendee) do
        render 'family_finances/table', title: 'On Campus Assignments',
                                        collection: report.on_campus_stays
        render 'family_finances/table', title: 'Off Campus Assignments',
                                        collection: report.off_campus_stays
        render 'family_finances/adjustments', price: report.stay_adjustments

        render 'family_finances/table', title: 'Courses (TODO: not counted toward subtotal yet)',
                                        collection: report.courses

        render 'family_finances/table', title: 'Conferences',
                                        collection: report.conferences
        render 'family_finances/adjustments',
          price: report.conference_adjustments

        render 'family_finances/table', title: 'Rec Center',
                                        collection: report.rec_center
        render 'family_finances/adjustments',
          price: report.rec_center_adjustments

        render 'family_finances/subtotal', price: report.subtotal
      end
    end

    h2 'Children'

    @finances.children_reports.each do |report|
      child = report.child

      panel link_to(child.full_name, child) do
        render 'family_finances/table', title: 'On Campus Assignments',
                                        collection: report.on_campus_stays
        render 'family_finances/adjustments', price: report.stay_adjustments

        render 'family_finances/table', title: 'Chidcare Weeks',
                                        collection: report.childcare
        render 'family_finances/adjustments',
          price: report.childcare_adjustments

        render 'family_finances/table', title: 'Hot Lunch Weeks',
                                        collection: report.hot_lunches
        render 'family_finances/adjustments',
          price: report.hot_lunch_adjustments

        render 'family_finances/table', title: 'Rec Center',
                                        collection: report.rec_center
        render 'family_finances/adjustments',
          price: report.rec_center_adjustments

        render 'family_finances/subtotal', price: report.subtotal
      end
    end

    # panel 'Children' do
    #   family.children.each do |child|
    #     h4 link_to(child.full_name, child)

    #     results ||=
    #       if child.age_group == :childcare
    #         {
    #           'Rec Pass' => RecPass::ChargePersonCost.call(person: child),
    #           'Childcare' => Childcare::ChargeChildCost.call(child: child),
    #           'Hot Lunches' => HotLunch::ChargeChildCost.call(child: child)
    #         }
    #       else
    #         {
    #           'Rec Pass' => RecPass::ChargePersonCost.call(person: child),
    #           'Junior/Senior' => JuniorSenior::ChargeChildCost.call(child: child),
    #           'Hot Lunches' => HotLunch::ChargeChildCost.call(child: child)
    #         }
    #       end

    #     render 'cost_adjustments/summary_table', results: results

    #     hr
    #   end
    # end

    # panel 'Housing' do
    #   family.attendees.each do |attendee|
    #     h4 link_to(attendee.full_name, attendee)

    #     render 'cost_adjustments/summary_table', results: {
    #       'Apartment Housing' =>
    #       Stay::ChargeAttendeeApartment.call(attendee: attendee),
    #         'Dormitory Housing' =>
    #       Stay::ChargeAttendeeDormitory.call(attendee: attendee)
    #     }.freeze

    #     hr
    #   end

    #   family.children.each do |child|
    #     h4 link_to(child.full_name, child)

    #     @results ||=
    #       if child.age_group == :childcare
    #         {
    #           'Rec Pass' => RecPass::ChargePersonCost.call(person: child),
    #           'Childcare' => Childcare::ChargeChildCost.call(child: child),
    #           'Hot Lunches' => HotLunch::ChargeChildCost.call(child: child)
    #         }
    #       else
    #         {
    #           'Rec Pass' => RecPass::ChargePersonCost.call(person: child),
    #           'Junior/Senior' => JuniorSenior::ChargeChildCost.call(child: child),
    #           'Hot Lunches' => HotLunch::ChargeChildCost.call(child: child)
    #         }
    #       end

    #     render 'cost_adjustments/summary_table', results: {
    #       'Housing' => Stay::ChargeChildCost.call(child: child),
    #     }

    #     hr
    #   end
    # end
  end

  next unless policy.show_finances?

  column do
    panel 'Staff Number' do
      code family.staff_number
      status_tag :yes, label: 'Chargeable' if family.chargeable_staff_number?
    end
    render 'payments/table_panel', payments: family.payments
    render 'cost_adjustments/list_panel',
      cost_adjustments: family.cost_adjustments

    button 'Check-in', disabled: true
  end
end
